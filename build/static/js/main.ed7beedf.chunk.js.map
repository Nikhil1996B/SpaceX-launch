{"version":3,"sources":["components/filters/selector.js","components/filters/index.jsx","components/launchtiles/index.jsx","App.js","serviceWorker.js","index.js"],"names":["years","year","id","isSelected","launchLand","type","React","memo","selectedYear","launchFIlter","landFilter","useState","selectedLaunchYear","setSelectedYearFlter","launchTypeSuccess","setlaunchSuccess","landSuccess","setlandSuccess","launchYear","map","index","key","className","onClick","launchSuccess","success","landing","style","filtercontainer","LaunchTile","allLaunch","length","launches","src","links","mission_patch_small","alt","srcSet","mission_name","flight_number","mission_id","class","ids","launch_year","launch_success","launch_landing","App","setAllLaunch","setLaunchYear","setLaunchType","setLandType","useEffect","fetch","then","res","json","data","catch","e","console","log","fetchPatches","url","URL","process","launch","land","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ed7beedf.chunk.js","sourcesContent":["const filterLaunch = (allLaunch) => {\r\n  let __parseLaunch = allLaunch;\r\n  console.log(__parseLaunch);\r\n  return allLaunch;\r\n};\r\n\r\nlet __filterYear = \"2006\";\r\nlet __filterLaunch = false;\r\nlet __filterLanding = false;\r\n\r\nexport const years = [\r\n  { year: \"2006\", id: \"1\", isSelected: false },\r\n  { year: \"2007\", id: \"2\", isSelected: false },\r\n  { year: \"2008\", id: \"3\", isSelected: false },\r\n  { year: \"2009\", id: \"4\", isSelected: false },\r\n  { year: \"2010\", id: \"5\", isSelected: false },\r\n  { year: \"2011\", id: \"6\", isSelected: false },\r\n  { year: \"2012\", id: \"7\", isSelected: false },\r\n  { year: \"2013\", id: \"8\", isSelected: false },\r\n  { year: \"2014\", id: \"9\", isSelected: false },\r\n  { year: \"2015\", id: \"10\", isSelected: false },\r\n  { year: \"2016\", id: \"11\", isSelected: false },\r\n  { year: \"2017\", id: \"12\", isSelected: false },\r\n  { year: \"2018\", id: \"13\", isSelected: false },\r\n  { year: \"2019\", id: \"14\", isSelected: false },\r\n];\r\n\r\nexport const launchLand = [\r\n  { type: \"true\", id: \"1\" },\r\n  { type: \"false\", id: \"2\" },\r\n];\r\n\r\nexport const selectedFilters = (year, launch, landing) => {\r\n  __filterYear = year;\r\n  __filterLaunch = launch;\r\n  __filterLanding = landing;\r\n};\r\n\r\nexport default filterLaunch;\r\n","import React, { useState } from \"react\";\r\nimport filterLaunch, { years, launchLand } from \"./selector\";\r\nimport style from \"./style.css\";\r\n\r\nfunction Filter({ selectedYear, launchFIlter, landFilter }) {\r\n  const [selectedLaunchYear, setSelectedYearFlter] = useState(\"1\");\r\n  const [launchTypeSuccess, setlaunchSuccess] = useState(\"false\");\r\n  const [landSuccess, setlandSuccess] = useState(\"false\");\r\n\r\n  const launchYear = years.map((year, index) => (\r\n    <>\r\n      <li key={index}>\r\n        <button\r\n          type=\"submit\"\r\n          className={selectedLaunchYear == year.id ? \"select\" : \"btn\"}\r\n          id={year.id}\r\n          onClick={() => {\r\n            selectedYear(year.year);\r\n            setSelectedYearFlter(year.id);\r\n          }}\r\n        >\r\n          {year.year}\r\n        </button>\r\n      </li>\r\n    </>\r\n  ));\r\n\r\n  const launchSuccess = (\r\n    <>\r\n      <div className=\"landingfiltersection\">\r\n        <p className=\"filterTitle\">Successful Launch</p>\r\n        <hr />\r\n      </div>\r\n      <div className=\"landing-result\">\r\n        <div className=\"success\">\r\n          {launchLand.map((success, index) => (\r\n            <button\r\n              key={index}\r\n              className={launchTypeSuccess == success.id ? \"select\" : \"btn\"}\r\n              id=\"true\"\r\n              onClick={() => {\r\n                launchFIlter(success.type);\r\n                setlaunchSuccess(success.id);\r\n              }}\r\n            >\r\n              {success.type}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  const landing = (\r\n    <>\r\n      <div className=\"landingfiltersection\">\r\n        <p className=\"filterTitle\">Successful Landing</p>\r\n        <hr />\r\n      </div>\r\n\r\n      <div className=\"landing-result\">\r\n        <div className=\"success\">\r\n          {launchLand.map((success, index) => (\r\n            <button\r\n              key={index}\r\n              className={landSuccess == success.id ? \"select\" : \"btn\"}\r\n              id=\"true\"\r\n              onClick={() => {\r\n                landFilter(success.type);\r\n                setlandSuccess(success.id);\r\n              }}\r\n            >\r\n              {success.type}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <section className={style.filtercontainer}>\r\n        <div className=\"filter-box\">\r\n          <h1>Filters</h1>\r\n          <div className=\"launch-year\">\r\n            <p className=\"filterTitle\">Launch Year</p>\r\n            <hr />\r\n            <div className=\"years\">\r\n              <ul className=\"year-list\" id=\"year-list\">\r\n                {launchYear}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"success-launch\">{launchSuccess}</div>\r\n          <div className=\"success-landing\">{landing}</div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Filter);\r\n","import React, { useEffect } from \"react\";\r\nimport style from \"./style.css\";\r\n\r\nfunction LaunchTile({ allLaunch }) {\r\n  return (\r\n    <>\r\n      <section className=\"launch-program-container\">\r\n        {allLaunch.length > 0 ? (\r\n          allLaunch.map((launches, index) => (\r\n            <div className=\"launch-program-list-item\" key={index}>\r\n              <div className=\"launch-program-inner\">\r\n                <img\r\n                  className=\"missionpatch\"\r\n                  src={launches.links.mission_patch_small}\r\n                  alt=\"Falcon set\"\r\n                  srcSet=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"flightpatchcontent\">\r\n                <p className=\"flightdescription\">\r\n                  {launches.mission_name}#{launches.flight_number}\r\n                </p>\r\n                {launches.mission_id.length > 0 ? (\r\n                  <>\r\n                    <p class=\"fontweight\">Misison Ids:</p>\r\n                    <span class=\"fontcolor\">\r\n                    {launches.mission_id.map((ids) => (\r\n                      <ul>\r\n                        <li key={ids}>{ids}</li>\r\n                      </ul>\r\n                    ))}\r\n                    </span>\r\n                    \r\n                  </>\r\n                ) : null}\r\n                <p>\r\n                  <span class=\"fontweight\">Launch Year: </span> <span class=\"fontcolor\">{launches.launch_year}</span>\r\n                </p>\r\n                <p>\r\n                  <span class=\"fontweight\">Successful Launch: </span>{\" \"}\r\n                  <span class=\"fontcolor\">{launches.launch_success ? \"true\" : \"false\"}</span>\r\n                  \r\n                </p>\r\n                {launches.launch_success ? (\r\n                  <p>\r\n                    <span class=\"fontweight\">Successful Landing: </span>{\" \"}\r\n                    <span class=\"fontcolor\">{launches.launch_landing ? \"true\" : \"false\"}</span>\r\n                    \r\n                  </p>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div class=\"fontweight\">No results found matching this filter</div>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LaunchTile;\r\n","import React, { useEffect,useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Filter from \"./components/filters/index\";\r\nimport LaunchTile from \"./components/launchtiles/index\";\r\n\r\nfunction App() {\r\n  const [allLaunch, setAllLaunch] = useState([]);\r\n  const [launchYear, setLaunchYear] = useState(\"\");\r\n  const [launchSuccess, setLaunchType] = useState(\"\");\r\n  const [landSuccess, setLandType] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.spaceXdata.com/v3/launches?limit=8\")\r\n      .then((res) => res.json())\r\n      .then((data) => setAllLaunch(data))\r\n      .catch((e) => console.log(e));\r\n    return () => {};\r\n  }, []);\r\n\r\n\r\n  const fetchPatches = (url) => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => setAllLaunch(data))\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let URL = \"https://api.spaceXdata.com/v3/launches?limit=8\";\r\n    if (launchYear != \"\") {\r\n      if (launchSuccess != \"\") {\r\n        if (landSuccess != \"\") {\r\n          URL = `${URL}&launch_year=${launchYear}&launch_success=${launchSuccess}&landSuccess=${landSuccess}`;\r\n          fetchPatches(URL);\r\n        } else {\r\n          URL = `${URL}&launch_year=${launchYear}&launch_success=${launchSuccess}`;\r\n          fetchPatches(URL);\r\n        }\r\n      } else {\r\n        URL = `${URL}&launch_year=${launchYear}`;\r\n        fetchPatches(URL);\r\n      }\r\n    } else if (launchSuccess != \"\") {\r\n      if (landSuccess != \"\") {\r\n        URL = `${URL}&land_success=${landSuccess}&launch_success=${launchSuccess}`;\r\n        fetchPatches(URL);\r\n      } else {\r\n        URL = `${URL}&land_success=${landSuccess}`;\r\n        fetchPatches(URL);\r\n      }\r\n    }\r\n    return () => {\r\n      URL = \"https://api.spaceXdata.com/v3/launches?limit=8\";\r\n    };\r\n  }, [launchSuccess, landSuccess, launchYear]);\r\n\r\n  const selectedYear = (year) => {\r\n    console.log(\"selected launch year\", year);\r\n    setLaunchYear(year);\r\n  };\r\n\r\n  const launchFIlter = (launch = \"\") => {\r\n    setLaunchType(launch);\r\n    console.log(launch);\r\n  };\r\n\r\n  const landFilter = (land = \"\") => {\r\n    setLandType(land);\r\n    console.log(land);\r\n  };\r\n  return (\r\n    <>\r\n      <h1>{process.env.REACT_APP_URL}</h1>\r\n      <div className=\"spacex-landing-container\">\r\n        <Filter\r\n          allLaunch={allLaunch}\r\n          selectedYear={selectedYear}\r\n          launchFIlter={launchFIlter}\r\n          landFilter={landFilter}\r\n        />\r\n        <LaunchTile allLaunch={allLaunch} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}